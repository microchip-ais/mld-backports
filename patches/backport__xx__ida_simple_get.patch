backport: core: ida_simple_get, ida_simple_remove

diff --git a/most/cdev/cdev.c b/most/cdev/cdev.c
--- a/most/cdev/cdev.c
+++ b/most/cdev/cdev.c
@@ -28,6 +28,11 @@ static struct cdev_component {
 	struct core_component cc;
 } comp;
 
+int ida_simple_get(struct ida *ida, unsigned int start, unsigned int end,
+		   gfp_t gfp_mask);
+
+void ida_simple_remove(struct ida *ida, unsigned int id);
+
 struct comp_channel {
 	wait_queue_head_t wq;
 	spinlock_t unlink;	/* synchronization lock to unlink channels */
diff --git a/most/core.c b/most/core.c
--- a/most/core.c
+++ b/most/core.c
@@ -23,6 +23,32 @@
 #include <linux/idr.h>
 #include <most/core.h>
 
+#include <linux/atomic.h>
+
+
+static atomic_t minor;
+
+static inline void ida_init_(struct ida *ida) { ida_init(ida); }
+
+#define ida_init(x)  do { atomic_set(&minor, -1); ida_init_(x); } while(0)
+
+int ida_simple_get(struct ida *ida, unsigned int start, unsigned int end,
+		   gfp_t gfp_mask)
+{
+	int m = atomic_inc_return(&minor);
+	if (m > 250) {
+		atomic_dec(&minor);
+		return -EFAULT;
+	}
+	return m;
+}
+EXPORT_SYMBOL_GPL(ida_simple_get);
+
+void ida_simple_remove(struct ida *ida, unsigned int id)
+{
+}
+EXPORT_SYMBOL_GPL(ida_simple_remove);
+
 #define MAX_CHANNELS	64
 #define STRING_SIZE	80
 
